version: '3.8'

services:
  # MongoDB - Primary database
  mongodb:
    image: mongo:7.0
    container_name: fakepe-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: expe_secure_pass_2024
      MONGO_INITDB_DATABASE: expe_gateway
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - expe-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis - Caching, queues, locks
  redis:
    image: redis:7-alpine
    container_name: fakepe-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass expe_redis_pass_2024
    volumes:
      - redis_data:/data
    networks:
      - expe-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Prometheus - Metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: fakepe-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - expe-network

  # Grafana - Monitoring dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: fakepe-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: expe_grafana_2024
      GF_INSTALL_PLUGINS: grafana-clock-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    networks:
      - expe-network
    depends_on:
      - prometheus

  # API Gateway
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    container_name: fakepe-api-gateway
    restart: unless-stopped
    ports:
      - "4000:4000"
    environment:
      NODE_ENV: development
      PORT: 4000
      MONGO_URI: mongodb://admin:expe_secure_pass_2024@mongodb:27017/expe_gateway?authSource=admin
      REDIS_URL: redis://:expe_redis_pass_2024@redis:6379
      JWT_SECRET: expe_jwt_secret_change_in_production_2024
      AUTH_SERVICE_URL: http://auth-service:4001
      PAYMENT_SERVICE_URL: http://payment-service:4002
      MERCHANT_SERVICE_URL: http://merchant-service:4003
    networks:
      - expe-network
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./services/api-gateway:/app
      - /app/node_modules

  # Auth Service
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: fakepe-auth-service
    restart: unless-stopped
    ports:
      - "4001:4001"
    environment:
      NODE_ENV: development
      PORT: 4001
      MONGO_URI: mongodb://admin:expe_secure_pass_2024@mongodb:27017/expe_gateway?authSource=admin
      REDIS_URL: redis://:expe_redis_pass_2024@redis:6379
      JWT_SECRET: expe_jwt_secret_change_in_production_2024
      JWT_EXPIRY: 24h
    networks:
      - expe-network
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./services/auth-service:/app
      - /app/node_modules

  # Payment Service
  payment-service:
    build:
      context: ./services/payment-service
      dockerfile: Dockerfile
    container_name: fakepe-payment-service
    restart: unless-stopped
    ports:
      - "4002:4002"
    environment:
      NODE_ENV: development
      PORT: 4002
      MONGO_URI: mongodb://admin:expe_secure_pass_2024@mongodb:27017/expe_gateway?authSource=admin
      REDIS_URL: redis://:expe_redis_pass_2024@redis:6379
      WEBHOOK_QUEUE_NAME: queue:webhooks
    networks:
      - expe-network
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./services/payment-service:/app
      - /app/node_modules

  # Webhook Service
  webhook-service:
    build:
      context: ./services/webhook-service
      dockerfile: Dockerfile
    container_name: fakepe-webhook-service
    restart: unless-stopped
    environment:
      NODE_ENV: development
      MONGO_URI: mongodb://admin:expe_secure_pass_2024@mongodb:27017/expe_gateway?authSource=admin
      REDIS_URL: redis://:expe_redis_pass_2024@redis:6379
      WEBHOOK_QUEUE_NAME: queue:webhooks
      MAX_ATTEMPTS: 10
      BASE_BACKOFF_MS: 1000
      MAX_BACKOFF_MS: 3600000
    networks:
      - expe-network
    depends_on:
      - mongodb
      - redis
      - payment-service
    volumes:
      - ./services/webhook-service:/app
      - /app/node_modules

  # Merchant Service
  merchant-service:
    build:
      context: ./services/merchant-service
      dockerfile: Dockerfile
    container_name: fakepe-merchant-service
    restart: unless-stopped
    ports:
      - "4003:4003"
    environment:
      NODE_ENV: development
      PORT: 4003
      MONGO_URI: mongodb://admin:expe_secure_pass_2024@mongodb:27017/expe_gateway?authSource=admin
      REDIS_URL: redis://:expe_redis_pass_2024@redis:6379
    networks:
      - expe-network
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./services/merchant-service:/app
      - /app/node_modules

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: fakepe-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      VITE_API_URL: http://localhost:4000
      VITE_WS_URL: ws://localhost:4000
    networks:
      - expe-network
    depends_on:
      - api-gateway
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules

networks:
  expe-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data:
  prometheus_data:
  grafana_data:
  frontend_node_modules:
